# -*- coding: utf-8 -*-

"""Generate the Resilient customizations required for fn_mxtoolbox"""

from __future__ import print_function
from resilient_circuits.util import *

def codegen_reload_data():
    """Parameters to codegen used to generate the fn_mxtoolbox package"""
    reload_params = {"package": u"fn_mxtoolbox",
                    "incident_fields": [], 
                    "action_fields": [], 
                    "function_params": [u"mx_argument", u"mx_command", u"mx_param1"], 
                    "datatables": [], 
                    "message_destinations": [u"fn_mxtoolbox"], 
                    "functions": [u"fn_mxtoolbox"], 
                    "phases": [], 
                    "automatic_tasks": [], 
                    "scripts": [], 
                    "workflows": [u"example_mxtoolbox_mx_query"], 
                    "actions": [u"Example: MXToolbox MX query"] 
                    }
    return reload_params


def customization_data(client=None):
    """Produce any customization definitions (types, fields, message destinations, etc)
       that should be installed by `resilient-circuits customize`
    """

    # This import data contains:
    #   Function inputs:
    #     mx_argument
    #     mx_command
    #     mx_param1
    #   Message Destinations:
    #     fn_mxtoolbox
    #   Functions:
    #     fn_mxtoolbox
    #   Workflows:
    #     example_mxtoolbox_mx_query
    #   Rules:
    #     Example: MXToolbox MX query


    yield ImportDefinition(u"""
eyJzZXJ2ZXJfdmVyc2lvbiI6IHsibWFqb3IiOiAzMCwgIm1pbm9yIjogNCwgImJ1aWxkX251bWJl
ciI6IDIzNywgInZlcnNpb24iOiAiMzAuNC4yMzcifSwgImV4cG9ydF9mb3JtYXRfdmVyc2lvbiI6
IDIsICJpZCI6IDEsICJleHBvcnRfZGF0ZSI6IDE1NDA5OTEyMDkzMTksICJmaWVsZHMiOiBbeyJp
ZCI6IDUxLCAibmFtZSI6ICJpbmNfdHJhaW5pbmciLCAidGV4dCI6ICJTaW11bGF0aW9uIiwgInBy
ZWZpeCI6IG51bGwsICJ0eXBlX2lkIjogMCwgInRvb2x0aXAiOiAiV2hldGhlciB0aGUgaW5jaWRl
bnQgaXMgYSBzaW11bGF0aW9uIG9yIGEgcmVndWxhciBpbmNpZGVudC4gIFRoaXMgZmllbGQgaXMg
cmVhZC1vbmx5LiIsICJpbnB1dF90eXBlIjogImJvb2xlYW4iLCAiaGlkZV9ub3RpZmljYXRpb24i
OiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVyIjogZmFs
c2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2UsICJ1dWlkIjogImMz
ZjBlM2VkLTIxZTEtNGQ1My1hZmZiLWZlNWNhMzMwOGNjYSIsICJvcGVyYXRpb25zIjogW10sICJv
cGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVhZF9vbmx5IjogdHJ1ZSwgImNo
YW5nZWFibGUiOiB0cnVlLCAicmljaF90ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5IjogImluY2lk
ZW50L2luY190cmFpbmluZyIsICJ0ZW1wbGF0ZXMiOiBbXX0sIHsiaWQiOiAxMjksICJuYW1lIjog
Im14X3BhcmFtMSIsICJ0ZXh0IjogIm14X3BhcmFtMSIsICJwcmVmaXgiOiBudWxsLCAidHlwZV9p
ZCI6IDExLCAidG9vbHRpcCI6ICIiLCAicGxhY2Vob2xkZXIiOiAiIiwgImlucHV0X3R5cGUiOiAi
dGV4dCIsICJoaWRlX25vdGlmaWNhdGlvbiI6IGZhbHNlLCAiY2hvc2VuIjogZmFsc2UsICJkZWZh
dWx0X2Nob3Nlbl9ieV9zZXJ2ZXIiOiBmYWxzZSwgImJsYW5rX29wdGlvbiI6IGZhbHNlLCAiaW50
ZXJuYWwiOiBmYWxzZSwgInV1aWQiOiAiYjNmN2RlZjEtZWJlMy00OGYzLTlkNzgtNDdlYWViYTc4
NjNiIiwgIm9wZXJhdGlvbnMiOiBbXSwgIm9wZXJhdGlvbl9wZXJtcyI6IHt9LCAidmFsdWVzIjog
W10sICJyZWFkX29ubHkiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAicmljaF90ZXh0Ijog
ZmFsc2UsICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vbXhfcGFyYW0xIiwgInRlbXBsYXRlcyI6
IFtdfSwgeyJpZCI6IDEyOCwgIm5hbWUiOiAibXhfYXJndW1lbnQiLCAidGV4dCI6ICJteF9hcmd1
bWVudCIsICJwcmVmaXgiOiBudWxsLCAidHlwZV9pZCI6IDExLCAidG9vbHRpcCI6ICJBcmd1bWVu
dCBpcyBzcGVjaWZpYyB0byB0aGUgY29tbWFuZCBzZWxlY3Rpb24iLCAicGxhY2Vob2xkZXIiOiAi
IiwgImlucHV0X3R5cGUiOiAidGV4dCIsICJyZXF1aXJlZCI6ICJhbHdheXMiLCAiaGlkZV9ub3Rp
ZmljYXRpb24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2Vy
dmVyIjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2UsICJ1
dWlkIjogIjAxM2I3NjRkLTkwOWYtNDBiZS04YTY1LWJmODI3ODQxOGI2MSIsICJvcGVyYXRpb25z
IjogW10sICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFtdLCAicmVhZF9vbmx5Ijog
ZmFsc2UsICJjaGFuZ2VhYmxlIjogdHJ1ZSwgInJpY2hfdGV4dCI6IGZhbHNlLCAiZXhwb3J0X2tl
eSI6ICJfX2Z1bmN0aW9uL214X2FyZ3VtZW50IiwgInRlbXBsYXRlcyI6IFtdfSwgeyJpZCI6IDEy
NywgIm5hbWUiOiAibXhfY29tbWFuZCIsICJ0ZXh0IjogIm14X2NvbW1hbmQiLCAicHJlZml4Ijog
bnVsbCwgInR5cGVfaWQiOiAxMSwgInRvb2x0aXAiOiAiIiwgInBsYWNlaG9sZGVyIjogIiIsICJp
bnB1dF90eXBlIjogInNlbGVjdCIsICJyZXF1aXJlZCI6ICJhbHdheXMiLCAiaGlkZV9ub3RpZmlj
YXRpb24iOiBmYWxzZSwgImNob3NlbiI6IGZhbHNlLCAiZGVmYXVsdF9jaG9zZW5fYnlfc2VydmVy
IjogZmFsc2UsICJibGFua19vcHRpb24iOiBmYWxzZSwgImludGVybmFsIjogZmFsc2UsICJ1dWlk
IjogImNhODg0OTNkLWE5YTctNGE0YS04YWY4LWIzY2RmMDk4OWM5OSIsICJvcGVyYXRpb25zIjog
W10sICJvcGVyYXRpb25fcGVybXMiOiB7fSwgInZhbHVlcyI6IFt7InZhbHVlIjogMTEyLCAibGFi
ZWwiOiAibXgiLCAiZW5hYmxlZCI6IHRydWUsICJwcm9wZXJ0aWVzIjogbnVsbCwgInV1aWQiOiAi
MjY3ZjQyMGItZGNjYS00NzQwLTlkNTQtOTMzZDAzYmNhOGI3IiwgImhpZGRlbiI6IGZhbHNlLCAi
ZGVmYXVsdCI6IHRydWV9LCB7InZhbHVlIjogMTEzLCAibGFiZWwiOiAiYSIsICJlbmFibGVkIjog
dHJ1ZSwgInByb3BlcnRpZXMiOiBudWxsLCAidXVpZCI6ICI0M2FjZGUwNC0zM2ExLTQwNTAtYjFm
MC0zNmJiMDc5YzJmZWEiLCAiaGlkZGVuIjogZmFsc2UsICJkZWZhdWx0IjogZmFsc2V9LCB7InZh
bHVlIjogMTE0LCAibGFiZWwiOiAiZG5zIiwgImVuYWJsZWQiOiB0cnVlLCAicHJvcGVydGllcyI6
IG51bGwsICJ1dWlkIjogIjczYjQxNmVmLTY2ZWQtNDRkOC1iY2U5LTE1MDZhY2Y0MmUwYiIsICJo
aWRkZW4iOiBmYWxzZSwgImRlZmF1bHQiOiBmYWxzZX0sIHsidmFsdWUiOiAxMTUsICJsYWJlbCI6
ICJzcGYiLCAiZW5hYmxlZCI6IHRydWUsICJwcm9wZXJ0aWVzIjogbnVsbCwgInV1aWQiOiAiNDBi
NDYxMTgtNzNmYi00MDg2LThlNmQtYjdiZTA5Y2QxNTFiIiwgImhpZGRlbiI6IGZhbHNlLCAiZGVm
YXVsdCI6IGZhbHNlfSwgeyJ2YWx1ZSI6IDExNiwgImxhYmVsIjogInR4dCIsICJlbmFibGVkIjog
dHJ1ZSwgInByb3BlcnRpZXMiOiBudWxsLCAidXVpZCI6ICJkNGVlNmVhZC0yMThhLTRiNzQtODUy
ZC1jMmQyNTQwNmY0YWQiLCAiaGlkZGVuIjogZmFsc2UsICJkZWZhdWx0IjogZmFsc2V9LCB7InZh
bHVlIjogMTE3LCAibGFiZWwiOiAic29hIiwgImVuYWJsZWQiOiB0cnVlLCAicHJvcGVydGllcyI6
IG51bGwsICJ1dWlkIjogIjJmMmZhYzE1LTVjNjgtNDQ2Ni1hM2M1LWRlYWJhZjlhNGY4MiIsICJo
aWRkZW4iOiBmYWxzZSwgImRlZmF1bHQiOiBmYWxzZX0sIHsidmFsdWUiOiAxMTgsICJsYWJlbCI6
ICJwdHIiLCAiZW5hYmxlZCI6IHRydWUsICJwcm9wZXJ0aWVzIjogbnVsbCwgInV1aWQiOiAiZmVh
NjI4NDEtYzlhNi00ZDYwLTgyZWQtZjZlNmNjOWJjYjNkIiwgImhpZGRlbiI6IGZhbHNlLCAiZGVm
YXVsdCI6IGZhbHNlfSwgeyJ2YWx1ZSI6IDExOSwgImxhYmVsIjogImJsYWNrbGlzdCIsICJlbmFi
bGVkIjogdHJ1ZSwgInByb3BlcnRpZXMiOiBudWxsLCAidXVpZCI6ICJkYTg1MzU2Ny1jYTg3LTRm
MDEtOGZhMC0xODM2MmNiYjU5NDAiLCAiaGlkZGVuIjogZmFsc2UsICJkZWZhdWx0IjogZmFsc2V9
LCB7InZhbHVlIjogMTIwLCAibGFiZWwiOiAic210cCIsICJlbmFibGVkIjogdHJ1ZSwgInByb3Bl
cnRpZXMiOiBudWxsLCAidXVpZCI6ICI5ZjI5N2VmZC04ZjBiLTRmMmQtODQ0ZS1jMjU3ZjQ5ZWMw
MTEiLCAiaGlkZGVuIjogZmFsc2UsICJkZWZhdWx0IjogZmFsc2V9LCB7InZhbHVlIjogMTIxLCAi
bGFiZWwiOiAidGNwIiwgImVuYWJsZWQiOiB0cnVlLCAicHJvcGVydGllcyI6IG51bGwsICJ1dWlk
IjogIjMzZTJmNjA4LWE0YTQtNDlmMS1hYmJkLWJhOTdhNDM1MmJkNCIsICJoaWRkZW4iOiBmYWxz
ZSwgImRlZmF1bHQiOiBmYWxzZX0sIHsidmFsdWUiOiAxMjIsICJsYWJlbCI6ICJodHRwIiwgImVu
YWJsZWQiOiB0cnVlLCAicHJvcGVydGllcyI6IG51bGwsICJ1dWlkIjogImU1NzkzNjg0LTM4YzUt
NGYzNS05MGM1LTZmMGRkOTBjZWJhYyIsICJoaWRkZW4iOiBmYWxzZSwgImRlZmF1bHQiOiBmYWxz
ZX0sIHsidmFsdWUiOiAxMjMsICJsYWJlbCI6ICJodHRwcyIsICJlbmFibGVkIjogdHJ1ZSwgInBy
b3BlcnRpZXMiOiBudWxsLCAidXVpZCI6ICI1YjhhNDhjNC00Njk3LTQzNmUtYTA0ZS1jNjkyYjdm
YmU5MDYiLCAiaGlkZGVuIjogZmFsc2UsICJkZWZhdWx0IjogZmFsc2V9LCB7InZhbHVlIjogMTI0
LCAibGFiZWwiOiAicGluZyIsICJlbmFibGVkIjogdHJ1ZSwgInByb3BlcnRpZXMiOiBudWxsLCAi
dXVpZCI6ICJlOGUyYTA5OS1lMWU5LTQ4MGYtOGEwNS1jYWMwNTdjMDJiZGYiLCAiaGlkZGVuIjog
ZmFsc2UsICJkZWZhdWx0IjogZmFsc2V9LCB7InZhbHVlIjogMTI1LCAibGFiZWwiOiAidHJhY2Ui
LCAiZW5hYmxlZCI6IHRydWUsICJwcm9wZXJ0aWVzIjogbnVsbCwgInV1aWQiOiAiNDBlZjdjOWYt
NmNlOS00MzlkLTg3NGEtNzlkYTllZWQ5M2RhIiwgImhpZGRlbiI6IGZhbHNlLCAiZGVmYXVsdCI6
IGZhbHNlfV0sICJyZWFkX29ubHkiOiBmYWxzZSwgImNoYW5nZWFibGUiOiB0cnVlLCAicmljaF90
ZXh0IjogZmFsc2UsICJleHBvcnRfa2V5IjogIl9fZnVuY3Rpb24vbXhfY29tbWFuZCIsICJ0ZW1w
bGF0ZXMiOiBbXX1dLCAiaW5jaWRlbnRfdHlwZXMiOiBbeyJ1cGRhdGVfZGF0ZSI6IDE1NDEwNjU0
NDY0NTMsICJjcmVhdGVfZGF0ZSI6IDE1NDEwNjU0NDY0NTMsICJ1dWlkIjogImJmZWVjMmQ0LTM3
NzAtMTFlOC1hZDM5LTRhMDAwNDA0NGFhMCIsICJkZXNjcmlwdGlvbiI6ICJDdXN0b21pemF0aW9u
IFBhY2thZ2VzIChpbnRlcm5hbCkiLCAiZXhwb3J0X2tleSI6ICJDdXN0b21pemF0aW9uIFBhY2th
Z2VzIChpbnRlcm5hbCkiLCAibmFtZSI6ICJDdXN0b21pemF0aW9uIFBhY2thZ2VzIChpbnRlcm5h
bCkiLCAiZW5hYmxlZCI6IGZhbHNlLCAic3lzdGVtIjogZmFsc2UsICJwYXJlbnRfaWQiOiBudWxs
LCAiaGlkZGVuIjogZmFsc2UsICJpZCI6IDB9XSwgInBoYXNlcyI6IFtdLCAiYXV0b21hdGljX3Rh
c2tzIjogW10sICJvdmVycmlkZXMiOiBbXSwgIm1lc3NhZ2VfZGVzdGluYXRpb25zIjogW3sibmFt
ZSI6ICJmbl9teHRvb2xib3giLCAicHJvZ3JhbW1hdGljX25hbWUiOiAiZm5fbXh0b29sYm94Iiwg
ImRlc3RpbmF0aW9uX3R5cGUiOiAwLCAiZXhwZWN0X2FjayI6IHRydWUsICJ1c2VycyI6IFsic3Vz
YWhvbzFAaW4uaWJtLmNvbSIsICJtYXJrLnNjaGVyZmxpbmdAaWJtLmNvbSJdLCAidXVpZCI6ICI2
N2JlYzY2MC1hOWI2LTQzNTgtOGI2OS0wNjJjNDJhMTczZmIiLCAiZXhwb3J0X2tleSI6ICJmbl9t
eHRvb2xib3gifV0sICJhY3Rpb25zIjogW3siaWQiOiAzMSwgIm5hbWUiOiAiRXhhbXBsZTogTVhU
b29sYm94IE1YIHF1ZXJ5IiwgInR5cGUiOiAxLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3QiLCAi
Y29uZGl0aW9ucyI6IFtdLCAiYXV0b21hdGlvbnMiOiBbXSwgIm1lc3NhZ2VfZGVzdGluYXRpb25z
IjogW10sICJ3b3JrZmxvd3MiOiBbImV4YW1wbGVfbXh0b29sYm94X214X3F1ZXJ5Il0sICJ2aWV3
X2l0ZW1zIjogW10sICJ0aW1lb3V0X3NlY29uZHMiOiA4NjQwMCwgInV1aWQiOiAiZDIwOTU3NmYt
MWUwMy00NmFmLWEyOTYtODQxZGRhNzA1NDZmIiwgImV4cG9ydF9rZXkiOiAiRXhhbXBsZTogTVhU
b29sYm94IE1YIHF1ZXJ5IiwgImxvZ2ljX3R5cGUiOiAiYWxsIn1dLCAibGF5b3V0cyI6IFtdLCAi
bm90aWZpY2F0aW9ucyI6IG51bGwsICJ0aW1lZnJhbWVzIjogbnVsbCwgImluZHVzdHJpZXMiOiBu
dWxsLCAicmVndWxhdG9ycyI6IG51bGwsICJnZW9zIjogbnVsbCwgInRhc2tfb3JkZXIiOiBbXSwg
ImFjdGlvbl9vcmRlciI6IFtdLCAidHlwZXMiOiBbXSwgInNjcmlwdHMiOiBbXSwgImluY2lkZW50
X2FydGlmYWN0X3R5cGVzIjogW10sICJ3b3JrZmxvd3MiOiBbeyJ3b3JrZmxvd19pZCI6IDE4LCAi
bmFtZSI6ICJFeGFtcGxlOiBNWFRvb2xib3ggTVggcXVlcnkiLCAicHJvZ3JhbW1hdGljX25hbWUi
OiAiZXhhbXBsZV9teHRvb2xib3hfbXhfcXVlcnkiLCAib2JqZWN0X3R5cGUiOiAiYXJ0aWZhY3Qi
LCAiZGVzY3JpcHRpb24iOiAiUXVlcnkgTVggcmVjb3JkIiwgImNyZWF0b3JfaWQiOiAic3VzYWhv
bzFAaW4uaWJtLmNvbSIsICJsYXN0X21vZGlmaWVkX2J5IjogInN1c2Fob28xQGluLmlibS5jb20i
LCAibGFzdF9tb2RpZmllZF90aW1lIjogMTU0MDk5MDc2MDEwNCwgImV4cG9ydF9rZXkiOiAiZXhh
bXBsZV9teHRvb2xib3hfbXhfcXVlcnkiLCAidXVpZCI6ICIzNGQyMmFkYy03ODg0LTQ3NjEtOThm
OS00YjI5MmU1MzY0OGEiLCAiY29udGVudCI6IHsid29ya2Zsb3dfaWQiOiAiZXhhbXBsZV9teHRv
b2xib3hfbXhfcXVlcnkiLCAieG1sIjogIjw/eG1sIHZlcnNpb249XCIxLjBcIiBlbmNvZGluZz1c
IlVURi04XCI/PjxkZWZpbml0aW9ucyB4bWxucz1cImh0dHA6Ly93d3cub21nLm9yZy9zcGVjL0JQ
TU4vMjAxMDA1MjQvTU9ERUxcIiB4bWxuczpicG1uZGk9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3Bl
Yy9CUE1OLzIwMTAwNTI0L0RJXCIgeG1sbnM6b21nZGM9XCJodHRwOi8vd3d3Lm9tZy5vcmcvc3Bl
Yy9ERC8yMDEwMDUyNC9EQ1wiIHhtbG5zOm9tZ2RpPVwiaHR0cDovL3d3dy5vbWcub3JnL3NwZWMv
REQvMjAxMDA1MjQvRElcIiB4bWxuczpyZXNpbGllbnQ9XCJodHRwOi8vcmVzaWxpZW50LmlibS5j
b20vYnBtblwiIHhtbG5zOnhzZD1cImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hXCIg
eG1sbnM6eHNpPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2VcIiB0
YXJnZXROYW1lc3BhY2U9XCJodHRwOi8vd3d3LmNhbXVuZGEub3JnL3Rlc3RcIj48cHJvY2VzcyBp
ZD1cImV4YW1wbGVfbXh0b29sYm94X214X3F1ZXJ5XCIgaXNFeGVjdXRhYmxlPVwidHJ1ZVwiIG5h
bWU9XCJFeGFtcGxlOiBNWFRvb2xib3ggTVggcXVlcnlcIj48ZG9jdW1lbnRhdGlvbj5RdWVyeSBN
WCByZWNvcmQ8L2RvY3VtZW50YXRpb24+PHN0YXJ0RXZlbnQgaWQ9XCJTdGFydEV2ZW50XzE1NWFz
eG1cIj48b3V0Z29pbmc+U2VxdWVuY2VGbG93XzFybG9wd3E8L291dGdvaW5nPjwvc3RhcnRFdmVu
dD48c2VydmljZVRhc2sgaWQ9XCJTZXJ2aWNlVGFza18xaDd6NXVxXCIgbmFtZT1cIk1YVG9vbGJv
eFwiIHJlc2lsaWVudDp0eXBlPVwiZnVuY3Rpb25cIj48ZXh0ZW5zaW9uRWxlbWVudHM+PHJlc2ls
aWVudDpmdW5jdGlvbiB1dWlkPVwiZDQ3MmNiOTYtMWU1NS00YmI4LWFhY2QtZTc4NDAyZDEwMWIw
XCI+e1wiaW5wdXRzXCI6e1wiY2E4ODQ5M2QtYTlhNy00YTRhLThhZjgtYjNjZGYwOTg5Yzk5XCI6
e1wiaW5wdXRfdHlwZVwiOlwic3RhdGljXCIsXCJzdGF0aWNfaW5wdXRcIjp7XCJtdWx0aXNlbGVj
dF92YWx1ZVwiOltdLFwic2VsZWN0X3ZhbHVlXCI6XCIyNjdmNDIwYi1kY2NhLTQ3NDAtOWQ1NC05
MzNkMDNiY2E4YjdcIn19fSxcInByZV9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiaW5wdXRzLm14X2Fy
Z3VtZW50ID0gYXJ0aWZhY3QudmFsdWVcXG5pbnB1dHMubXhfcGFyYW0xID0gTm9uZVwiLFwicmVz
dWx0X25hbWVcIjpcIlwiLFwicG9zdF9wcm9jZXNzaW5nX3NjcmlwdFwiOlwiaW5jaWRlbnQuYWRk
Tm90ZShyZXN1bHRzWydSZXBvcnRpbmdOYW1lU2VydmVyJ10pXFxuXFxuXFxuXFxuXFxuI3tcXG4j
ICAgXFxcIlVJRFxcXCI6IG51bGwsXFxuIyAgIFxcXCJDb21tYW5kXFxcIjogXFxcIm14XFxcIixc
XG4jICAgXFxcIklzVHJhbnNpdGlvbmVkXFxcIjogZmFsc2UsXFxuIyAgIFxcXCJDb21tYW5kQXJn
dW1lbnRcXFwiOiBcXFwiZ21haWwuY29tXFxcIixcXG4jICAgXFxcIlRpbWVSZWNvcmRlZFxcXCI6
IFxcXCIyMDE4LTEwLTMxVDA3OjI5OjM1LjMzNDIyMDEtMDU6MDBcXFwiLFxcbiMgICBcXFwiUmVw
b3J0aW5nTmFtZVNlcnZlclxcXCI6IFxcXCJuczEuZ29vZ2xlLmNvbVxcXCIsXFxuIyAgIFxcXCJU
aW1lVG9Db21wbGV0ZVxcXCI6IFxcXCIzNzdcXFwiLFxcbiMgICBcXFwiUmVsYXRlZElQXFxcIjog
bnVsbCxcXG4jICAgXFxcIklzRW5kcG9pbnRcXFwiOiBmYWxzZSxcXG4jICAgXFxcIkhhc1N1YnNj
cmlwdGlvbnNcXFwiOiBmYWxzZSxcXG4jICAgXFxcIkZhaWxlZFxcXCI6IFtdLFxcbiMgICBcXFwi
V2FybmluZ3NcXFwiOiBbXSxcXG4jICAgXFxcIlBhc3NlZFxcXCI6IFtcXG4jICAgICB7XFxuIyAg
ICAgICBcXFwiSURcXFwiOiA0NDEsXFxuIyAgICAgICBcXFwiTmFtZVxcXCI6IFxcXCJETUFSQyBS
ZWNvcmQgUHVibGlzaGVkXFxcIixcXG4jICAgICAgIFxcXCJJbmZvXFxcIjogXFxcIkRNQVJDIFJl
Y29yZCBmb3VuZFxcXCIsXFxuIyAgICAgICBcXFwiVXJsXFxcIjogXFxcImh0dHBzOi8vbG9va3Vw
Lm14dG9vbGJveC5jb20vUHJvYmxlbS9teC9ETUFSQy1SZWNvcmQtUHVibGlzaGVkP3BhZ2U9cHJv
Yl9teCZhbXA7c2hvd2xvZ2luPTEmYW1wO2hpZGV0b2M9MSZhbXA7YWN0aW9uPW14OmdtYWlsLmNv
bVxcXCIsXFxuIyAgICAgICBcXFwiUHVibGljRGVzY3JpcHRpb25cXFwiOiBudWxsLFxcbiMgICAg
ICAgXFxcIklzRXhjbHVkZWRCeVVzZXJcXFwiOiBmYWxzZVxcbiMgICAgIH0sXFxuIyAgICAge1xc
biMgICAgICAgXFxcIklEXFxcIjogNTA2LFxcbiMgICAgICAgXFxcIk5hbWVcXFwiOiBcXFwiRE5T
IFJlY29yZCBQdWJsaXNoZWRcXFwiLFxcbiMgICAgICAgXFxcIkluZm9cXFwiOiBcXFwiRE5TIFJl
Y29yZCBmb3VuZFxcXCIsXFxuIyAgICAgICBcXFwiVXJsXFxcIjogXFxcImh0dHBzOi8vbG9va3Vw
Lm14dG9vbGJveC5jb20vUHJvYmxlbS9teC9ETlMtUmVjb3JkLVB1Ymxpc2hlZD9wYWdlPXByb2Jf
bXgmYW1wO3Nob3dsb2dpbj0xJmFtcDtoaWRldG9jPTEmYW1wO2FjdGlvbj1teDpnbWFpbC5jb21c
XFwiLFxcbiMgICAgICAgXFxcIlB1YmxpY0Rlc2NyaXB0aW9uXFxcIjogbnVsbCxcXG4jICAgICAg
IFxcXCJJc0V4Y2x1ZGVkQnlVc2VyXFxcIjogZmFsc2VcXG4jICAgICB9XFxuIyAgIF0sXFxuIyAg
IFxcXCJUaW1lb3V0c1xcXCI6IFtdLFxcbiMgICBcXFwiRXJyb3JzXFxcIjogW10sXFxuIyAgIFxc
XCJJbmZvcm1hdGlvblxcXCI6IFtcXG4jICAgICB7XFxuIyAgICAgICBcXFwiUHJlZlxcXCI6IFxc
XCI1XFxcIixcXG4jICAgICAgIFxcXCJIb3N0bmFtZVxcXCI6IFxcXCJnbWFpbC1zbXRwLWluLmwu
Z29vZ2xlLmNvbVxcXCIsXFxuIyAgICAgICBcXFwiSVAgQWRkcmVzc1xcXCI6IFxcXCIxNzMuMTk0
LjIwNS4yN1xcXCIsXFxuIyAgICAgICBcXFwiVFRMXFxcIjogXFxcIjYwIG1pblxcXCJcXG4jICAg
ICB9LFxcbiMgICAgIHtcXG4jICAgICAgIFxcXCJQcmVmXFxcIjogXFxcIjVcXFwiLFxcbiMgICAg
ICAgXFxcIkhvc3RuYW1lXFxcIjogXFxcImdtYWlsLXNtdHAtaW4ubC5nb29nbGUuY29tXFxcIixc
XG4jICAgICAgIFxcXCJJUCBBZGRyZXNzXFxcIjogXFxcIjI2MDc6ZjhiMDo0MDBkOmMwMjo6MWJc
XFwiLFxcbiMgICAgICAgXFxcIlRUTFxcXCI6IFxcXCI2MCBtaW5cXFwiXFxuIyAgICAgfSxcXG4j
ICAgICB7XFxuIyAgICAgICBcXFwiUHJlZlxcXCI6IFxcXCIxMFxcXCIsXFxuIyAgICAgICBcXFwi
SG9zdG5hbWVcXFwiOiBcXFwiYWx0MS5nbWFpbC1zbXRwLWluLmwuZ29vZ2xlLmNvbVxcXCIsXFxu
IyAgICAgICBcXFwiSVAgQWRkcmVzc1xcXCI6IFxcXCI2NC4yMzMuMTkwLjI3XFxcIixcXG4jICAg
ICAgIFxcXCJUVExcXFwiOiBcXFwiNjAgbWluXFxcIlxcbiMgICAgIH0sXFxuIyAgICAge1xcbiMg
ICAgICAgXFxcIlByZWZcXFwiOiBcXFwiMTBcXFwiLFxcbiMgICAgICAgXFxcIkhvc3RuYW1lXFxc
IjogXFxcImFsdDEuZ21haWwtc210cC1pbi5sLmdvb2dsZS5jb21cXFwiLFxcbiMgICAgICAgXFxc
IklQIEFkZHJlc3NcXFwiOiBcXFwiMjgwMDozZjA6NDAwMzpjMDE6OjFhXFxcIixcXG4jICAgICAg
IFxcXCJUVExcXFwiOiBcXFwiNjAgbWluXFxcIlxcbiMgICAgIH0sXFxuIyAgICAge1xcbiMgICAg
ICAgXFxcIlByZWZcXFwiOiBcXFwiMjBcXFwiLFxcbiMgICAgICAgXFxcIkhvc3RuYW1lXFxcIjog
XFxcImFsdDIuZ21haWwtc210cC1pbi5sLmdvb2dsZS5jb21cXFwiLFxcbiMgICAgICAgXFxcIklQ
IEFkZHJlc3NcXFwiOiBcXFwiNzQuMTI1LjE5My4yN1xcXCIsXFxuIyAgICAgICBcXFwiVFRMXFxc
IjogXFxcIjYwIG1pblxcXCJcXG4jICAgICB9LFxcbiMgICAgIHtcXG4jICAgICAgIFxcXCJQcmVm
XFxcIjogXFxcIjIwXFxcIixcXG4jICAgICAgIFxcXCJIb3N0bmFtZVxcXCI6IFxcXCJhbHQyLmdt
YWlsLXNtdHAtaW4ubC5nb29nbGUuY29tXFxcIixcXG4jICAgICAgIFxcXCJJUCBBZGRyZXNzXFxc
IjogXFxcIjJhMDA6MTQ1MDo0MDBiOmMwMTo6MWFcXFwiLFxcbiMgICAgICAgXFxcIlRUTFxcXCI6
IFxcXCI2MCBtaW5cXFwiXFxuIyAgICAgfSxcXG4jICAgICB7XFxuIyAgICAgICBcXFwiUHJlZlxc
XCI6IFxcXCIzMFxcXCIsXFxuIyAgICAgICBcXFwiSG9zdG5hbWVcXFwiOiBcXFwiYWx0My5nbWFp
bC1zbXRwLWluLmwuZ29vZ2xlLmNvbVxcXCIsXFxuIyAgICAgICBcXFwiSVAgQWRkcmVzc1xcXCI6
IFxcXCI2Ni4xMDIuMS4yN1xcXCIsXFxuIyAgICAgICBcXFwiVFRMXFxcIjogXFxcIjYwIG1pblxc
XCJcXG4jICAgICB9LFxcbiMgICAgIHtcXG4jICAgICAgIFxcXCJQcmVmXFxcIjogXFxcIjMwXFxc
IixcXG4jICAgICAgIFxcXCJIb3N0bmFtZVxcXCI6IFxcXCJhbHQzLmdtYWlsLXNtdHAtaW4ubC5n
b29nbGUuY29tXFxcIixcXG4jICAgICAgIFxcXCJJUCBBZGRyZXNzXFxcIjogXFxcIjJhMDA6MTQ1
MDo0MDBjOmMwNjo6MWFcXFwiLFxcbiMgICAgICAgXFxcIlRUTFxcXCI6IFxcXCI2MCBtaW5cXFwi
XFxuIyAgICAgfSxcXG4jICAgICB7XFxuIyAgICAgICBcXFwiUHJlZlxcXCI6IFxcXCI0MFxcXCIs
XFxuIyAgICAgICBcXFwiSG9zdG5hbWVcXFwiOiBcXFwiYWx0NC5nbWFpbC1zbXRwLWluLmwuZ29v
Z2xlLmNvbVxcXCIsXFxuIyAgICAgICBcXFwiSVAgQWRkcmVzc1xcXCI6IFxcXCI3NC4xMjUuMTI4
LjI3XFxcIixcXG4jICAgICAgIFxcXCJUVExcXFwiOiBcXFwiNjAgbWluXFxcIlxcbiMgICAgIH0s
XFxuIyAgICAge1xcbiMgICAgICAgXFxcIlByZWZcXFwiOiBcXFwiNDBcXFwiLFxcbiMgICAgICAg
XFxcIkhvc3RuYW1lXFxcIjogXFxcImFsdDQuZ21haWwtc210cC1pbi5sLmdvb2dsZS5jb21cXFwi
LFxcbiMgICAgICAgXFxcIklQIEFkZHJlc3NcXFwiOiBcXFwiMmEwMDoxNDUwOjQwMTM6YzAyOjox
YVxcXCIsXFxuIyAgICAgICBcXFwiVFRMXFxcIjogXFxcIjYwIG1pblxcXCJcXG4jICAgICB9XFxu
IyAgIF0sXFxuIyAgIFxcXCJNdWx0aUluZm9ybWF0aW9uXFxcIjogW10sXFxuIyAgIFxcXCJJc0Jy
dXRlRm9yY2VcXFwiOiBmYWxzZSxcXG4jICAgXFxcIlRyYW5zY3JpcHRcXFwiOiBbXFxuIyAgICAg
e1xcbiMgICAgICAgXFxcIlRpbWVTdGFtcFxcXCI6IFxcXCJcXFxcclxcXFxuTG9va3VwU2VydmVy
djIgMzc3bXNcXFxcclxcXFxuXFxcIixcXG4jICAgICAgIFxcXCJEZXB0aFxcXCI6IFxcXCIxXFxc
IixcXG4jICAgICAgIFxcXCJTZXJ2ZXJOYW1lXFxcIjogXFxcIm0uZ3RsZC1zZXJ2ZXJzLm5ldFxc
XCIsXFxuIyAgICAgICBcXFwiU2VydmVySVBcXFwiOiBcXFwiMTkyLjU1LjgzLjMwXFxcIixcXG4j
ICAgICAgIFxcXCJBdXRob3JpdGF0aXZlXFxcIjogXFxcIk5PTi1BVVRIXFxcIixcXG4jICAgICAg
IFxcXCJFbGFwc2VkVGltZVxcXCI6IFxcXCI2MiBtc1xcXCIsXFxuIyAgICAgICBcXFwiUmVzdWx0
XFxcIjogXFxcIlJlY2VpdmVkIDQgUmVmZXJyYWxzICwgcmNvZGU9Tk9fRVJST1JcXFwiLFxcbiMg
ICAgICAgXFxcIlF1ZXN0aW9uXFxcIjogXFxcIlxcXCIsXFxuIyAgICAgICBcXFwiQW5zd2Vyc1xc
XCI6IFxcXCJnbWFpbC5jb20uXFxcXHQxNzI4MDBcXFxcdElOXFxcXHROU1xcXFx0bnMyLmdvb2ds
ZS5jb20sZ21haWwuY29tLlxcXFx0MTcyODAwXFxcXHRJTlxcXFx0TlNcXFxcdG5zMS5nb29nbGUu
Y29tLGdtYWlsLmNvbS5cXFxcdDE3MjgwMFxcXFx0SU5cXFxcdE5TXFxcXHRuczMuZ29vZ2xlLmNv
bSxnbWFpbC5jb20uXFxcXHQxNzI4MDBcXFxcdElOXFxcXHROU1xcXFx0bnM0Lmdvb2dsZS5jb20s
XFxcIlxcbiMgICAgIH0sXFxuIyAgICAge1xcbiMgICAgICAgXFxcIlRpbWVTdGFtcFxcXCI6IFxc
XCJcXFwiLFxcbiMgICAgICAgXFxcIkRlcHRoXFxcIjogXFxcIjJcXFwiLFxcbiMgICAgICAgXFxc
IlNlcnZlck5hbWVcXFwiOiBcXFwibnMxLmdvb2dsZS5jb21cXFwiLFxcbiMgICAgICAgXFxcIlNl
cnZlcklQXFxcIjogXFxcIjIxNi4yMzkuMzIuMTBcXFwiLFxcbiMgICAgICAgXFxcIkF1dGhvcml0
YXRpdmVcXFwiOiBcXFwiQVVUSFxcXCIsXFxuIyAgICAgICBcXFwiRWxhcHNlZFRpbWVcXFwiOiBc
XFwiMTUgbXNcXFwiLFxcbiMgICAgICAgXFxcIlJlc3VsdFxcXCI6IFxcXCJSZWNlaXZlZCA1IEFu
c3dlcnMgLCByY29kZT1OT19FUlJPUlxcXCIsXFxuIyAgICAgICBcXFwiUXVlc3Rpb25cXFwiOiBc
XFwiXFxcIixcXG4jICAgICAgIFxcXCJBbnN3ZXJzXFxcIjogXFxcImdtYWlsLmNvbS5cXFxcdDM2
MDBcXFxcdElOXFxcXHRNWFxcXFx0MjAgYWx0Mi5nbWFpbC1zbXRwLWluLmwuZ29vZ2xlLmNvbSxn
bWFpbC5jb20uXFxcXHQzNjAwXFxcXHRJTlxcXFx0TVhcXFxcdDQwIGFsdDQuZ21haWwtc210cC1p
bi5sLmdvb2dsZS5jb20sZ21haWwuY29tLlxcXFx0MzYwMFxcXFx0SU5cXFxcdE1YXFxcXHQxMCBh
bHQxLmdtYWlsLXNtdHAtaW4ubC5nb29nbGUuY29tLGdtYWlsLmNvbS5cXFxcdDM2MDBcXFxcdElO
XFxcXHRNWFxcXFx0MzAgYWx0My5nbWFpbC1zbXRwLWluLmwuZ29vZ2xlLmNvbSxnbWFpbC5jb20u
XFxcXHQzNjAwXFxcXHRJTlxcXFx0TVhcXFxcdDUgZ21haWwtc210cC1pbi5sLmdvb2dsZS5jb20s
XFxcIlxcbiMgICAgIH1cXG4jICAgXSxcXG4jICAgXFxcIk14UmVwXFxcIjogMCxcXG4jICAgXFxc
IkVtYWlsU2VydmljZVByb3ZpZGVyXFxcIjogXFxcIkdvb2dsZVxcXCIsXFxuIyAgIFxcXCJEbnNT
ZXJ2aWNlUHJvdmlkZXJcXFwiOiBudWxsLFxcbiMgICBcXFwiUmVsYXRlZExvb2t1cHNcXFwiOiBb
XFxuIyAgICAge1xcbiMgICAgICAgXFxcIk5hbWVcXFwiOiBcXFwiZG5zIGxvb2t1cFxcXCIsXFxu
IyAgICAgICBcXFwiVVJMXFxcIjogXFxcImh0dHBzOi8vbG9va3VwLm14dG9vbGJveC5jb20vYXBp
L3YxL2xvb2t1cC9hL2dtYWlsLmNvbVxcXCIsXFxuIyAgICAgICBcXFwiQ29tbWFuZFxcXCI6IFxc
XCJhXFxcIixcXG4jICAgICAgIFxcXCJDb21tYW5kQXJndW1lbnRcXFwiOiBcXFwiZ21haWwuY29t
XFxcIlxcbiMgICAgIH0sXFxuIyAgICAge1xcbiMgICAgICAgXFxcIk5hbWVcXFwiOiBcXFwiZG5z
IGNoZWNrXFxcIixcXG4jICAgICAgIFxcXCJVUkxcXFwiOiBcXFwiaHR0cHM6Ly9sb29rdXAubXh0
b29sYm94LmNvbS9hcGkvdjEvbG9va3VwL2Rucy9nbWFpbC5jb21cXFwiLFxcbiMgICAgICAgXFxc
IkNvbW1hbmRcXFwiOiBcXFwiZG5zXFxcIixcXG4jICAgICAgIFxcXCJDb21tYW5kQXJndW1lbnRc
XFwiOiBcXFwiZ21haWwuY29tXFxcIlxcbiMgICAgIH0sXFxuIyAgICAge1xcbiMgICAgICAgXFxc
Ik5hbWVcXFwiOiBcXFwic3BmIGxvb2t1cFxcXCIsXFxuIyAgICAgICBcXFwiVVJMXFxcIjogXFxc
Imh0dHBzOi8vbG9va3VwLm14dG9vbGJveC5jb20vYXBpL3YxL2xvb2t1cC9zcGYvZ21haWwuY29t
XFxcIixcXG4jICAgICAgIFxcXCJDb21tYW5kXFxcIjogXFxcInNwZlxcXCIsXFxuIyAgICAgICBc
XFwiQ29tbWFuZEFyZ3VtZW50XFxcIjogXFxcImdtYWlsLmNvbVxcXCJcXG4jICAgICB9LFxcbiMg
ICAgIHtcXG4jICAgICAgIFxcXCJOYW1lXFxcIjogXFxcImRucyBwcm9wYWdhdGlvblxcXCIsXFxu
IyAgICAgICBcXFwiVVJMXFxcIjogXFxcImh0dHBzOi8vbG9va3VwLm14dG9vbGJveC5jb20vYXBp
L3YxL2xvb2t1cC9teC9nbWFpbC5jb206YWxsXFxcIixcXG4jICAgICAgIFxcXCJDb21tYW5kXFxc
IjogXFxcIm14XFxcIixcXG4jICAgICAgIFxcXCJDb21tYW5kQXJndW1lbnRcXFwiOiBcXFwiZ21h
aWwuY29tOmFsbFxcXCJcXG4jICAgICB9XFxuIyAgIF1cXG4jIH1cIn08L3Jlc2lsaWVudDpmdW5j
dGlvbj48L2V4dGVuc2lvbkVsZW1lbnRzPjxpbmNvbWluZz5TZXF1ZW5jZUZsb3dfMXJsb3B3cTwv
aW5jb21pbmc+PG91dGdvaW5nPlNlcXVlbmNlRmxvd18wbHM5anlnPC9vdXRnb2luZz48L3NlcnZp
Y2VUYXNrPjxzZXF1ZW5jZUZsb3cgaWQ9XCJTZXF1ZW5jZUZsb3dfMXJsb3B3cVwiIHNvdXJjZVJl
Zj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlNlcnZpY2VUYXNrXzFoN3o1dXFc
Ii8+PGVuZEV2ZW50IGlkPVwiRW5kRXZlbnRfMHljOGkwbFwiPjxpbmNvbWluZz5TZXF1ZW5jZUZs
b3dfMGxzOWp5ZzwvaW5jb21pbmc+PC9lbmRFdmVudD48c2VxdWVuY2VGbG93IGlkPVwiU2VxdWVu
Y2VGbG93XzBsczlqeWdcIiBzb3VyY2VSZWY9XCJTZXJ2aWNlVGFza18xaDd6NXVxXCIgdGFyZ2V0
UmVmPVwiRW5kRXZlbnRfMHljOGkwbFwiLz48dGV4dEFubm90YXRpb24gaWQ9XCJUZXh0QW5ub3Rh
dGlvbl8xa3h4aXl0XCI+PHRleHQ+U3RhcnQgeW91ciB3b3JrZmxvdyBoZXJlPC90ZXh0PjwvdGV4
dEFubm90YXRpb24+PGFzc29jaWF0aW9uIGlkPVwiQXNzb2NpYXRpb25fMXNldWo0OFwiIHNvdXJj
ZVJlZj1cIlN0YXJ0RXZlbnRfMTU1YXN4bVwiIHRhcmdldFJlZj1cIlRleHRBbm5vdGF0aW9uXzFr
eHhpeXRcIi8+PC9wcm9jZXNzPjxicG1uZGk6QlBNTkRpYWdyYW0gaWQ9XCJCUE1ORGlhZ3JhbV8x
XCI+PGJwbW5kaTpCUE1OUGxhbmUgYnBtbkVsZW1lbnQ9XCJ1bmRlZmluZWRcIiBpZD1cIkJQTU5Q
bGFuZV8xXCI+PGJwbW5kaTpCUE1OU2hhcGUgYnBtbkVsZW1lbnQ9XCJTdGFydEV2ZW50XzE1NWFz
eG1cIiBpZD1cIlN0YXJ0RXZlbnRfMTU1YXN4bV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwi
MzZcIiB3aWR0aD1cIjM2XCIgeD1cIjMwM1wiIHk9XCIxNjVcIi8+PGJwbW5kaTpCUE1OTGFiZWw+
PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIwXCIgd2lkdGg9XCI5MFwiIHg9XCIyOThcIiB5PVwiMjAw
XCIvPjwvYnBtbmRpOkJQTU5MYWJlbD48L2JwbW5kaTpCUE1OU2hhcGU+PGJwbW5kaTpCUE1OU2hh
cGUgYnBtbkVsZW1lbnQ9XCJUZXh0QW5ub3RhdGlvbl8xa3h4aXl0XCIgaWQ9XCJUZXh0QW5ub3Rh
dGlvbl8xa3h4aXl0X2RpXCI+PG9tZ2RjOkJvdW5kcyBoZWlnaHQ9XCIzMFwiIHdpZHRoPVwiMTAw
XCIgeD1cIjE4M1wiIHk9XCIxMDdcIi8+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6QlBNTkVk
Z2UgYnBtbkVsZW1lbnQ9XCJBc3NvY2lhdGlvbl8xc2V1ajQ4XCIgaWQ9XCJBc3NvY2lhdGlvbl8x
c2V1ajQ4X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIzMDVcIiB4c2k6dHlwZT1cIm9tZ2RjOlBv
aW50XCIgeT1cIjE3NVwiLz48b21nZGk6d2F5cG9pbnQgeD1cIjI1MVwiIHhzaTp0eXBlPVwib21n
ZGM6UG9pbnRcIiB5PVwiMTM3XCIvPjwvYnBtbmRpOkJQTU5FZGdlPjxicG1uZGk6QlBNTlNoYXBl
IGJwbW5FbGVtZW50PVwiU2VydmljZVRhc2tfMWg3ejV1cVwiIGlkPVwiU2VydmljZVRhc2tfMWg3
ejV1cV9kaVwiPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiODBcIiB3aWR0aD1cIjEwMFwiIHg9XCI0
MzJcIiB5PVwiMTQzXCIvPjwvYnBtbmRpOkJQTU5TaGFwZT48YnBtbmRpOkJQTU5FZGdlIGJwbW5F
bGVtZW50PVwiU2VxdWVuY2VGbG93XzFybG9wd3FcIiBpZD1cIlNlcXVlbmNlRmxvd18xcmxvcHdx
X2RpXCI+PG9tZ2RpOndheXBvaW50IHg9XCIzMzlcIiB4c2k6dHlwZT1cIm9tZ2RjOlBvaW50XCIg
eT1cIjE4M1wiLz48b21nZGk6d2F5cG9pbnQgeD1cIjQzMlwiIHhzaTp0eXBlPVwib21nZGM6UG9p
bnRcIiB5PVwiMTgzXCIvPjxicG1uZGk6QlBNTkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwi
MTJcIiB3aWR0aD1cIjBcIiB4PVwiMzg1LjVcIiB5PVwiMTYyXCIvPjwvYnBtbmRpOkJQTU5MYWJl
bD48L2JwbW5kaTpCUE1ORWRnZT48YnBtbmRpOkJQTU5TaGFwZSBicG1uRWxlbWVudD1cIkVuZEV2
ZW50XzB5YzhpMGxcIiBpZD1cIkVuZEV2ZW50XzB5YzhpMGxfZGlcIj48b21nZGM6Qm91bmRzIGhl
aWdodD1cIjM2XCIgd2lkdGg9XCIzNlwiIHg9XCI2NDVcIiB5PVwiMTY1XCIvPjxicG1uZGk6QlBN
TkxhYmVsPjxvbWdkYzpCb3VuZHMgaGVpZ2h0PVwiMTJcIiB3aWR0aD1cIjBcIiB4PVwiNjYzXCIg
eT1cIjIwNVwiLz48L2JwbW5kaTpCUE1OTGFiZWw+PC9icG1uZGk6QlBNTlNoYXBlPjxicG1uZGk6
QlBNTkVkZ2UgYnBtbkVsZW1lbnQ9XCJTZXF1ZW5jZUZsb3dfMGxzOWp5Z1wiIGlkPVwiU2VxdWVu
Y2VGbG93XzBsczlqeWdfZGlcIj48b21nZGk6d2F5cG9pbnQgeD1cIjUzMlwiIHhzaTp0eXBlPVwi
b21nZGM6UG9pbnRcIiB5PVwiMTgzXCIvPjxvbWdkaTp3YXlwb2ludCB4PVwiNjQ1XCIgeHNpOnR5
cGU9XCJvbWdkYzpQb2ludFwiIHk9XCIxODNcIi8+PGJwbW5kaTpCUE1OTGFiZWw+PG9tZ2RjOkJv
dW5kcyBoZWlnaHQ9XCIxMlwiIHdpZHRoPVwiMFwiIHg9XCI1ODguNVwiIHk9XCIxNjJcIi8+PC9i
cG1uZGk6QlBNTkxhYmVsPjwvYnBtbmRpOkJQTU5FZGdlPjwvYnBtbmRpOkJQTU5QbGFuZT48L2Jw
bW5kaTpCUE1ORGlhZ3JhbT48L2RlZmluaXRpb25zPiIsICJ2ZXJzaW9uIjogMX0sICJhY3Rpb25z
IjogW119XSwgInJvbGVzIjogW10sICJ3b3Jrc3BhY2VzIjogW10sICJmdW5jdGlvbnMiOiBbeyJp
ZCI6IDIxLCAibmFtZSI6ICJmbl9teHRvb2xib3giLCAiZGlzcGxheV9uYW1lIjogIk1YVG9vbGJv
eCIsICJkZXNjcmlwdGlvbiI6IHsiZm9ybWF0IjogInRleHQiLCAiY29udGVudCI6ICIifSwgImRl
c3RpbmF0aW9uX2hhbmRsZSI6ICJmbl9teHRvb2xib3giLCAiZXhwb3J0X2tleSI6ICJmbl9teHRv
b2xib3giLCAidXVpZCI6ICJkNDcyY2I5Ni0xZTU1LTRiYjgtYWFjZC1lNzg0MDJkMTAxYjAiLCAi
dmVyc2lvbiI6IDIsICJjcmVhdG9yIjogeyJpZCI6IDUsICJ0eXBlIjogInVzZXIiLCAibmFtZSI6
ICJzdXNhaG9vMUBpbi5pYm0uY29tIiwgImRpc3BsYXlfbmFtZSI6ICJTdWRpcCBTYWhvbyJ9LCAi
bGFzdF9tb2RpZmllZF9ieSI6IHsiaWQiOiA1LCAidHlwZSI6ICJ1c2VyIiwgIm5hbWUiOiAic3Vz
YWhvbzFAaW4uaWJtLmNvbSIsICJkaXNwbGF5X25hbWUiOiAiU3VkaXAgU2Fob28ifSwgImxhc3Rf
bW9kaWZpZWRfdGltZSI6IDE1NDA5ODg3MDM5MDIsICJ2aWV3X2l0ZW1zIjogW3sic3RlcF9sYWJl
bCI6IG51bGwsICJzaG93X2lmIjogbnVsbCwgImVsZW1lbnQiOiAiZmllbGRfdXVpZCIsICJmaWVs
ZF90eXBlIjogIl9fZnVuY3Rpb24iLCAiY29udGVudCI6ICJjYTg4NDkzZC1hOWE3LTRhNGEtOGFm
OC1iM2NkZjA5ODljOTkiLCAic2hvd19saW5rX2hlYWRlciI6IGZhbHNlfSwgeyJzdGVwX2xhYmVs
IjogbnVsbCwgInNob3dfaWYiOiBudWxsLCAiZWxlbWVudCI6ICJmaWVsZF91dWlkIiwgImZpZWxk
X3R5cGUiOiAiX19mdW5jdGlvbiIsICJjb250ZW50IjogIjAxM2I3NjRkLTkwOWYtNDBiZS04YTY1
LWJmODI3ODQxOGI2MSIsICJzaG93X2xpbmtfaGVhZGVyIjogZmFsc2V9LCB7InN0ZXBfbGFiZWwi
OiBudWxsLCAic2hvd19pZiI6IG51bGwsICJlbGVtZW50IjogImZpZWxkX3V1aWQiLCAiZmllbGRf
dHlwZSI6ICJfX2Z1bmN0aW9uIiwgImNvbnRlbnQiOiAiYjNmN2RlZjEtZWJlMy00OGYzLTlkNzgt
NDdlYWViYTc4NjNiIiwgInNob3dfbGlua19oZWFkZXIiOiBmYWxzZX1dLCAid29ya2Zsb3dzIjog
W3sid29ya2Zsb3dfaWQiOiAxOCwgIm5hbWUiOiAiRXhhbXBsZTogTVhUb29sYm94IE1YIHF1ZXJ5
IiwgInByb2dyYW1tYXRpY19uYW1lIjogImV4YW1wbGVfbXh0b29sYm94X214X3F1ZXJ5IiwgIm9i
amVjdF90eXBlIjogImFydGlmYWN0IiwgImRlc2NyaXB0aW9uIjogbnVsbCwgInV1aWQiOiBudWxs
LCAiYWN0aW9ucyI6IFtdfV19XX0=
"""
    )